/*
 * Credits
 * The Credits API provides information about customer credit lines.
 *
 * OpenAPI spec version: 2.2.0
 * Contact: gipinacho@santander.com.mx
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.bancosantander.likeu.model;
import java.util.List;

/**
 * Retrieves the period basic information
 */

 
public class PeriodDetail {

	private List<DomiciliationDetail> domiciliation = null;

	private List<AssistanceDetail> assistance = null;

	private com.bancosantander.likeu.model.AllOfPeriodDetailAccumulatedPurchases accumulated_purchases;

	private java.util.List<com.bancosantander.likeu.model.PaymentDetail> card_payment;

	private java.util.List<com.bancosantander.likeu.model.RecurrentPaymentDetail> recurrent_payment;

	private java.util.List<com.bancosantander.likeu.model.PayrollDetail> payroll_portability;

	private java.util.List<com.bancosantander.likeu.model.DigitalChannelDetail> digital_channels;

	private java.lang.Integer period_Id;

	private java.util.Date initial_date;

	private java.util.Date due_date;

/**
 * Retrieves the period basic information
 */
	public PeriodDetail() {
	}
/**
 * String
 * @param      domiciliation    array that is the source of characters.
 * @param      assistance    array that is the source of characters.
 * @param      accumulated_purchases    array that is the source of characters.
 * @param      card_payment    array that is the source of characters.
 * @param      recurrent_payment    array that is the source of characters.
 * @param      payroll_portability    array that is the source of characters.
 * @param      digital_channels    array that is the source of characters.
 * @param      initial_date    array that is the source of characters.
 * @param      due_date    array that is the source of characters.
 * @param      period_Id    array that is the source of characters.
 * @exception  IndexOutOfBoundsException  if the <code>offset</code>
 */
	public PeriodDetail(
			java.util.List<com.bancosantander.likeu.model.DomiciliationDetail> domiciliation,
			java.util.List<com.bancosantander.likeu.model.AssistanceDetail> assistance,
			com.bancosantander.likeu.model.AllOfPeriodDetailAccumulatedPurchases accumulated_purchases,
			java.util.List<com.bancosantander.likeu.model.PaymentDetail> card_payment,
			java.util.List<com.bancosantander.likeu.model.RecurrentPaymentDetail> recurrent_payment,
			java.util.List<com.bancosantander.likeu.model.PayrollDetail> payroll_portability,
			java.util.List<com.bancosantander.likeu.model.DigitalChannelDetail> digital_channels,
			java.lang.Integer period_Id, java.util.Date initial_date,
			java.util.Date due_date) {
		this.domiciliation = domiciliation;
		this.assistance = assistance;
		this.accumulated_purchases = accumulated_purchases;
		this.card_payment = card_payment;
		this.recurrent_payment = recurrent_payment;
		this.payroll_portability = payroll_portability;
		this.digital_channels = digital_channels;
		this.period_Id = period_Id;
		this.initial_date = new java.util.Date(initial_date.getTime());
		this.due_date = new java.util.Date(due_date.getTime());
	}
	/**
	 * Indicates the status of the period. * &#x60;ONGOING&#x60; - Indicates
	 * that status for period is in progress. * &#x60;FINISH&#x60; - Indicates
	 * that the period has ended.
	 */
	/**
	 * Adds 10 to the age
	 * 
	 * @param input
	 *            - The age to add 10 to
	 * @returns {value} - The age + 10
	 **/
	public enum StatusEnum {
		/**
		 * @param String
		 * @param String
		 */
		ONGOING("ONGOING"), FINISH("FINISH");

		private String value;
		/**
		 * @param String
		 */
		StatusEnum(String value) {
			this.value = value;
		}

		/**
		 * Indicates the key contract for the benefit
		 * 
		 * @return value
		 **/
		public String getValue() {
			return value;
		}

	}
	/**
	 * Indicate the status for domiciliation
	 * 
	 * @return domiciliation
	 **/
	public List<DomiciliationDetail> getDomiciliation() {
		return domiciliation;
	}
	/**
	 * @param List
	 *            <DomiciliationDetail>
	 */
	public void setDomiciliation(List<DomiciliationDetail> domiciliation) {
		this.domiciliation = domiciliation;
	}

	/**
	 * Indicate the status for assistance
	 * 
	 * @return assistance
	 **/
	public List<AssistanceDetail> getAssistance() {
		return assistance;
	}
	/**
	 * @param List
	 *            <AssistanceDetail>
	 */
	public void setAssistance(List<AssistanceDetail> assistance) {
		this.assistance = assistance;
	}
	/** 
	 * @return
	 */
	public com.bancosantander.likeu.model.AllOfPeriodDetailAccumulatedPurchases getAccumulated_purchases() {
		return this.accumulated_purchases;
	}
	public void setAccumulated_purchases(
			com.bancosantander.likeu.model.AllOfPeriodDetailAccumulatedPurchases accumulated_purchases) {
		this.accumulated_purchases = accumulated_purchases;
	}
	/** 
	 * @return
	 */
	public java.util.List<com.bancosantander.likeu.model.PaymentDetail> getCard_payment() {
		return this.card_payment;
	}
	/**
	 * @param List
	 *            <card>
	 */
	public void setCard_payment(
			java.util.List<com.bancosantander.likeu.model.PaymentDetail> card_payment) {
		this.card_payment = card_payment;
	}
	/** 
	 * @return
	 */
	public java.util.List<com.bancosantander.likeu.model.RecurrentPaymentDetail> getRecurrent_payment() {
		return this.recurrent_payment;
	}
	/**
	 * @param List
	 *            <recurrent>
	 */
	public void setRecurrent_payment(
			java.util.List<com.bancosantander.likeu.model.RecurrentPaymentDetail> recurrent_payment) {
		this.recurrent_payment = recurrent_payment;
	}
	/** 
	 * @return
	 */
	public java.util.List<com.bancosantander.likeu.model.PayrollDetail> getPayroll_portability() {
		return this.payroll_portability;
	}
	/**
	 * @param List
	 *            <nomina>
	 */
	public void setPayroll_portability(
			java.util.List<com.bancosantander.likeu.model.PayrollDetail> payroll_portability) {
		this.payroll_portability = payroll_portability;
	}
	/** 
	 * @return
	 */
	public java.util.List<com.bancosantander.likeu.model.DigitalChannelDetail> getDigital_channels() {
		return this.digital_channels;
	}
	/**
	 * @param List
	 *            <canales>
	 */
	public void setDigital_channels(
			java.util.List<com.bancosantander.likeu.model.DigitalChannelDetail> digital_channels) {
		this.digital_channels = digital_channels;
	}
	/** 
	 * @return
	 */
	public java.lang.Integer getPeriod_Id() {
		return this.period_Id;
	}
	/**
	 * @param List
	 *            <periodo>
	 */
	public void setPeriod_Id(java.lang.Integer period_Id) {
		this.period_Id = period_Id;
	}
	/** 
	 * @return
	 */
	public java.util.Date getInitial_date() {
		if (this.initial_date != null) {
			return new java.util.Date(this.initial_date.getTime());
		} else {
			return null;
		}
	}
	/**
	 * @param Date
	 */
	public void setInitial_date(java.util.Date initial_date) {
		if (initial_date != null) {
			this.initial_date = new java.util.Date(initial_date.getTime());
		} else {
			this.initial_date = null;
		}
	}
	/** 
	 * @return
	 */
	public java.util.Date getDue_date() {
		if (this.due_date != null) {
			return new java.util.Date(this.due_date.getTime());
		} else {
			return null;
		}
	}
	/**
	 * @param Date
	 */
	public void setDue_date(java.util.Date due_date) {
		if (due_date != null) {
			this.due_date = new java.util.Date(due_date.getTime());
		} else {
			this.due_date = null;
		}
	}

}
